type Question @entity {
  id: ID!
  questionId: Bytes!
  contract: Bytes!

  createdBlock: BigInt!
  createdTimestamp: BigInt!
  createdLogIndex: BigInt!
  updatedBlock: BigInt!
  updatedTimestamp: BigInt!

  template: Template

  data: String!

  qJsonStr: String
  qTitle: String
  qCategory: String
  qLang: String
  qType: String

  user: Bytes!
  arbitrator: Bytes!
  openingTimestamp: BigInt!
  timeout: BigInt!

  bounty: BigInt!

  currentAnswer: Bytes
  currentAnswerBond: BigInt!
  currentAnswerTimestamp: BigInt

  contentHash: Bytes
  historyHash: Bytes

  minBond: BigInt!
  lastBond: BigInt!
  cumulativeBonds: BigInt!

  arbitrationRequestedTimestamp: BigInt
  arbitrationRequestedBy: String
  isPendingArbitration: Boolean!
  arbitrationOccurred: Boolean!
  answerFinalizedTimestamp: BigInt

  currentScheduledFinalizationTimestamp: BigInt!
  reopens: Question
  reopenedBy: Question

  outcomes: [Outcome!] @derivedFrom(field: "question")
  answers: [Answer!] @derivedFrom(field: "question")
  responses: [Response!] @derivedFrom(field: "question")
}

type Outcome @entity {
  id: ID!
  answer: String!
  question: Question!
}

type Response @entity {
  id: ID!
  timestamp: BigInt!
  logIndex: BigInt!
  answer: Bytes
  isUnrevealed: Boolean!
  isCommitment: Boolean!
  commitmentId: Bytes
  bond: BigInt!
  user: Bytes!
  historyHash: Bytes!
  question: Question!
  createdBlock: BigInt!
  revealedBlock: BigInt
}

type Answer @entity {
  id: ID!
  timestamp: BigInt!
  answer: Bytes
  lastBond: BigInt!
  bondAggregate: BigInt!
  question: Question!
  createdBlock: BigInt!
}

type Category @entity {
  id: ID!
  numConditions: Int!
  numOpenConditions: Int!
  numClosedConditions: Int!
}

type Template @entity {
  id: ID!
  templateId: BigInt!
  contract: Bytes!
  user: Bytes!
  questionText: String 
  createdBlock: BigInt!
}

type Claim @entity {
  id: ID!
  question: Question!
  user: Bytes!
  amount: BigInt!
  createdBlock: BigInt!
}

type Fund @entity {
  id: ID!
  question: Question!
  user: Bytes!
  amount: BigInt!
  createdBlock: BigInt!
}

type Withdrawal @entity {
  id: ID!
  user: Bytes!
  amount: BigInt!
  createdBlock: BigInt!
}

type UserAction @entity {
  id: ID!
  actionType: String!
  user: Bytes!
  question: Question
  response: Response
  claim: Claim
  withdrawal: Withdrawal
  fund: Fund
  template: Template
  createdBlock: BigInt!
  createdTimestamp: BigInt!
}

type FactoryDeployment @entity {
  id: ID!
  token_address: Bytes!  
  token_symbol: String!
  token_decimals: BigInt!
  factory: Bytes!  
  realityETH: Bytes!  
  createdBlock: BigInt!
  createdTimestamp: BigInt!
}
